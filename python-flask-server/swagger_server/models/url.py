# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class URL(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, tiny_url: str=None, long_url: str=None):  # noqa: E501
        """URL - a model defined in Swagger

        :param tiny_url: The tiny_url of this URL.  # noqa: E501
        :type tiny_url: str
        :param long_url: The long_url of this URL.  # noqa: E501
        :type long_url: str
        """
        self.swagger_types = {
            'tiny_url': str,
            'long_url': str
        }

        self.attribute_map = {
            'tiny_url': 'tiny_url',
            'long_url': 'long_url'
        }
        self._tiny_url = tiny_url
        self._long_url = long_url

    @classmethod
    def from_dict(cls, dikt) -> 'URL':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The URL of this URL.  # noqa: E501
        :rtype: URL
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tiny_url(self) -> str:
        """Gets the tiny_url of this URL.


        :return: The tiny_url of this URL.
        :rtype: str
        """
        return self._tiny_url

    @tiny_url.setter
    def tiny_url(self, tiny_url: str):
        """Sets the tiny_url of this URL.


        :param tiny_url: The tiny_url of this URL.
        :type tiny_url: str
        """

        self._tiny_url = tiny_url

    @property
    def long_url(self) -> str:
        """Gets the long_url of this URL.


        :return: The long_url of this URL.
        :rtype: str
        """
        return self._long_url

    @long_url.setter
    def long_url(self, long_url: str):
        """Sets the long_url of this URL.


        :param long_url: The long_url of this URL.
        :type long_url: str
        """

        self._long_url = long_url
